OASISFormat: 0.4
Name:        session
Version:     0.1.0
Synopsis:    A session manager for your everyday needs
Authors:     Spiros Eliopoulos <spiros@inhabitedtype.com>
Maintainers: Spiros Eliopoulos <spiros@inhabitedtype.com>
Homepage:    https://github.com/inhabitedtype/ocaml-session
Copyrights:  (C) 2015 Inhabited Type LLC
License:     BSD-3-clause
Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild

Flag async
  Description: build the Async libraries
  Default: false

Flag postgresql
  Description: build the postgresql library
  Default: false

Flag cohttp
  Description: build the cohttp libraries
  Default: false

Flag webmachine
  Description: build the webmachine library
  Default: false

Flag async
  Description: build the async libraries
  Default: false

Flag lwt
  Description: build the lwt libraries
  Default: false

Library session
  Path:             lib
  Findlibname:      session
  Pack:             true
  BuildDepends:     nocrypto, result
  Modules:          Lift, Memory, S

Library session_postgresql
  Path:             backends/postgresql
  Findlibname:      postgresql
  Findlibparent:    session
  Build$:           flag(postgresql)
  Install$:         flag(postgresql)
  BuildDepends:     nocrypto, postgresql, result, session, threads
  Modules:          Session_postgresql

Library session_postgresql_async
  Path:             backends/postgresql
  Findlibname:      postgresql-async
  Findlibparent:    session
  Build$:           flag(postgresql) && flag(async)
  Install$:         flag(postgresql) && flag(async)
  BuildDepends:     async, postgresql, result, session, threads
  Modules:          Session_postgresql_async

Library session_postgresql_lwt
  Path:             backends/postgresql
  Findlibname:      postgresql-lwt
  Findlibparent:    session
  Build$:           flag(postgresql) && flag(lwt)
  Install$:         flag(postgresql) && flag(lwt)
  BuildDepends:     lwt, postgresql, result, session, threads
  Modules:          Session_postgresql_lwt

Library session_cohttp
  Path:             cohttp
  Findlibname:      cohttp
  Findlibparent:    session
  Build$:           flag(cohttp)
  Install$:         flag(cohttp)
  BuildDepends:     cohttp, result, session
  Modules:          Session_cohttp

Library session_cohttp_async
  Path:             cohttp
  Findlibname:      cohttp-async
  Findlibparent:    session
  Build$:           flag(cohttp) && flag(async)
  Install$:         flag(cohttp) && flag(async)
  BuildDepends:     async, cohttp.async, result, session.cohttp, threads
  Modules:          Session_cohttp_async

Library session_cohttp_lwt
  Path:             cohttp
  Findlibname:      cohttp-lwt
  Findlibparent:    session
  Build$:           flag(cohttp) && flag(lwt)
  Install$:         flag(cohttp) && flag(lwt)
  BuildDepends:     cohttp.lwt, lwt, result, session.cohttp
  Modules:          Session_cohttp_lwt

Library session_webmachine
  Path:             webmachine
  Findlibname:      webmachine
  Findlibparent:    session
  Build$:           flag(cohttp) && flag(webmachine)
  Install$:         flag(cohttp) && flag(webmachine)
  BuildDepends:     webmachine, result, session.cohttp
  Modules:          Session_webmachine

Document session
  Title:                A session manager for your everyday needs
  Type:                 ocamlbuild (0.4)
  BuildTools+:          ocamldoc
  Install:              true
  XOCamlbuildPath:      lib
  XOCamlbuildLibraries: session

Executable test_memory_backend
  Path:             lib_test
  MainIs:           test_memory_backend.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:     nocrypto.unix, session, result, oUnit (>= 1.0.2)

Executable test_postgresql_backend
  Path:             lib_test
  MainIs:           test_postgresql_backend.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:     nocrypto.unix, postgresql, session.postgresql, result, oUnit (>= 1.0.2)

Test test_memory_backend
  Run$:             flag(tests)
  Command:          $test_memory_backend
  WorkingDirectory: lib_test

Test test_postgresql_backend
  Run$:             flag(tests)
  Command:          $test_postgresql_backend
  WorkingDirectory: lib_test

SourceRepository master
  Type:     git
  Location: https://github.com/inhabitedtype/ocaml-session.git
  Browser:  https://github.com/inhabitedtype/ocaml-session
